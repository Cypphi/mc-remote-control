plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = 'https://maven.isxander.dev/releases' }
	maven { url = "https://maven.isxander.dev/snapshots" }
}

dependencies {
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")

	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	// Dependencies
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
	modImplementation("dev.isxander:yet-another-config-lib:${project.yacl_version}")

	implementation(include("net.dv8tion:JDA:${project.jda_version}"))
	implementation(include("com.squareup.okhttp3:okhttp:${project.okhttp_version}"))
	implementation(include("com.squareup.okio:okio:${project.okio_version}"))
	implementation(include("org.jetbrains.kotlin:kotlin-stdlib:${project.kotlin_stdlib_version}"))
	implementation(include("com.neovisionaries:nv-websocket-client:${project.nv_websocket_version}"))
	implementation(include("net.sf.trove4j:trove4j:${project.trove_version}"))
	implementation(include("org.apache.commons:commons-collections4:${project.commons_collections_version}"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

def platformTag = "fabric-${project.minecraft_version}"
def releaseVersion = "${project.mod_version}-${platformTag}"

tasks.named("remapJar") {
	archiveFileName.set("${project.archives_base_name}-${releaseVersion}.jar")
}

tasks.named("remapSourcesJar") {
	archiveFileName.set("${project.archives_base_name}-${releaseVersion}-sources.jar")
}
